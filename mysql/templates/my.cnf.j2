[client]
user         = {{ mysql_admin }}
password     = {{ mysql_pass }}


[mysql]
port         = 3306
socket       = /var/run/mysqld/mysqld.sock


[safe_mysqld]
err-log      = /var/log/mysql/mysql.err



[mysqld]
server-id    = 10
log-bin      = /var/log/mysql/mysql-bin.log
binlog-do-db = pop
binlog-ignore-db=mailstats,mysql,pop.bak,radius,radius.bak,test

user         = {{ mysql_admin }}
pid-file     = /var/run/mysqld/mysqld.pid
socket       = /var/run/mysqld/mysqld.sock
port         = 3306
log          = /var/log/mysql.log
basedir      = /usr
datadir      = /var/lib/mysql
tmpdir       = /tmp
language     = /usr/share/mysql/english
skip-locking

# key-buffer define quanto de memória será armazenado para
# gravar dados de consultas do MySQL. Quanto maior a quantidade
# de memória disponível, melhor será o desempenho do servidor
set-variable = key_buffer=312M

set-variable = max_allowed_packet=1M

# table_cache é muito importante, este número deve ser o dobro
# do número definido pela variável max_connections
set-variable  = table_cache=20000

set-variable  = sort_buffer=1M
set-variable  = record_buffer=1M
set-variable  = myisam_sort_buffer_size=64M
set-variable  = thread_cache=8
set-variable  = thread_concurrency=8

# max_connections vai definir quantos sub-processos e 
# consequentemente quantas conexões seu MySQL suportará
# simultaneamente. Por incrível que pareça, quanto maior este
# número, menor será o load do seu server. Tente restringir este
# para um número baixo e você verá que loucura está fazendo
set-variable  = max_connections=10000

set-variable  = net_write_timeout=30
set-variable  = connect_timeout=2
set-variable  = wait_timeout=30

# Read the manual if you want to enable InnoDB!
skip-innodb



[mysqldump]
quick
set-variable  = max_allowed_packet=1M



[isamchk]
set-variable   = key_buffer=64M # era 16M